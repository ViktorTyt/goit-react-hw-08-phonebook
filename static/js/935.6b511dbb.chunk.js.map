{"version":3,"file":"static/js/935.6b511dbb.chunk.js","mappings":"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","sources":["components/ContactsList/ContactsList.styled.jsx","components/ContactsListItem/ContactsListItem.styled.jsx","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/Modals/ContactModal.styled.jsx","components/Modals/ContactModal.jsx","components/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.jsx","hooks/useGetContactsList.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { theme } from 'styles/theme';\n\nexport const Title = styled.h2`\n  font-size: 48px;\n  color: ${theme.colors.dark};\n`;\n\nexport const Message = styled.h2``;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  margin: 12px 0;\n`;\n\nexport const Button = styled.button`\n  position: fixed;\n  bottom: 32px;\n  right: 56px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${theme.colors.accent};\n  color: ${theme.colors.white};\n  font-size: 16px;\n  font-weight: 700;\n  text-transform: uppercase;\n  border-radius: 50%;\n  transition: background-color ${theme.animation.cubicBezierV2}\n  \n  :hover {\n    background-color: ${theme.colors.darkOpange};\n  }\n\n  @media screen and (min-width: 1024px) {\n    bottom: 56px;\n    right: 360px;\n  }\n\n`;\n","import styled from '@emotion/styled';\nimport { theme } from 'styles/theme';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 500;\n  color: ${theme.colors.white};\n  background-color: ${theme.colors.lightblue};\n  border-radius: 4px;\n  box-shadow: ${theme.shadows.regular};\n\n  :not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const ContactItemWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n`;\n\nexport const ItemName = styled.span``;\nexport const ItemNumber = styled.span``;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const DeleteButton = styled.button`\n  width: 40px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  align-content: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: background-color ${theme.animation.cubicBezierV2};\n\n  :hover {\n    background-color: ${theme.colors.darkOpange};\n  }\n`;\n\nexport const EditButton = styled.button`\n  width: 40px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  align-content: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  transition: background-color ${theme.animation.cubicBezierV2};\n\n  :hover {\n    background-color: ${theme.colors.darkOpange};\n  }\n`;\n","import styled from '@emotion/styled';\nimport { theme } from 'styles/theme';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  justify-content: space-around;\n  box-shadow: ${theme.shadows.regular};\n  border-radius: 4px;\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  padding: 16px 0;\n  background-color: ${theme.colors.lightblue};\n  border-radius: 4px;\n\n  box-shadow: ${theme.shadows.large};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  margin-bottom: 12px;\n`;\n\nexport const Title = styled.span`\n  font-size: ${theme.fontSizes.large};\n  font-weight: 500;\n  color: ${theme.colors.white};\n  margin-bottom: 8px;\n`;\n\nexport const Input = styled.input`\n  width: 240px;\n  height: 24px;\n  border-radius: 4px;\n  border: 2px solid ${theme.colors.dark};\n  transition: border-color ${theme.animation.cubicBezierV1};\n\n  :focus {\n    border: 2px solid ${theme.colors.accent};\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 136px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${theme.colors.accent};\n  color: ${theme.colors.white};\n  font-size: 16px;\n  font-weight: 700;\n  text-transform: uppercase;\n  border-radius: 4px;\n  border: 2px solid ${theme.colors.dark};\n  transition: background-color ${theme.animation.cubicBezierV2};\n\n  :hover {\n    background-color: ${theme.colors.darkOpange};\n  }\n  :active {\n    border: none;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Form,\n  Label,\n  Title,\n  Input,\n  Button,\n  Container,\n} from './ContactsForm.styled';\nimport { useState } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { useGetContactsQuery } from 'redux/contactsApi';\n\nexport const ContactsForm = ({\n  onClose,\n  buttonText,\n  id,\n  defaultName,\n  defaultNumber,\n  setApi,\n  isLoading,\n}) => {\n  const [name, setName] = useState(defaultName);\n  const [number, setNumber] = useState(defaultNumber);\n  const { data } = useGetContactsQuery();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const normalizedName = name.trim().toLowerCase();\n    const formData = { name, number };\n\n    if (data.find(({ name }) => name.toLowerCase() === normalizedName)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      try {\n        const requestData = { id, ...formData };\n        await setApi(requestData);\n      } catch (error) {\n        console.log(error);\n      }\n\n      onClose();\n    }\n\n    reset();\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container>\n      <Form action=\"\" autocomplete=\"off\" onSubmit={handleSubmit}>\n        <Label>\n          <Title>Name</Title>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleInputChange}\n          />\n        </Label>\n        <Label>\n          <Title>Number</Title>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleInputChange}\n          />\n        </Label>\n        <Button type=\"submit\">\n          {isLoading ? (\n            <ThreeDots\n              height=\"56\"\n              width=\"56\"\n              radius=\"9\"\n              color=\"white\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClassName=\"\"\n              visible={true}\n            />\n          ) : (\n            buttonText\n          )}\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\nContactsForm.propTypes = {\n  onClose: PropTypes.func,\n  buttonText: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  defaultName: PropTypes.string.isRequired,\n  defaultNumber: PropTypes.string.isRequired,\n  setApi: PropTypes.func,\n  isLoading: PropTypes.bool,\n};\n","import styled from '@emotion/styled';\n// import { theme } from 'styles/theme';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(47, 48, 58, 0.4);\n  opacity: 1;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const Modal = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 290px;\n    // padding: 40px;\n    border-radius: 4px;\n    transform: translate(-50%, -75%) scale(1);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { ContactsForm } from 'components/ContactsForm';\nimport { Overlay, Modal } from './ContactModal.styled';\n\nexport const ContactModal = ({\n  onClose,\n  setApi,\n  id = '',\n  defaultName = '',\n  defaultNumber = '',\n  isLoading,\n  textButton,\n}) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackDrop = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return (\n    <Overlay onClick={handleBackDrop}>\n      <Modal isModalShow={true}>\n        <ContactsForm\n          onClose={onClose}\n          buttonText={textButton}\n          setApi={setApi}\n          isLoading={isLoading}\n          id={id}\n          defaultName={defaultName}\n          defaultNumber={defaultNumber}\n        />\n      </Modal>\n    </Overlay>\n  );\n};\n\nContactsForm.propTypes = {\n  onClose: PropTypes.func,\n  textButton: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  defaultName: PropTypes.string.isRequired,\n  defaultNumber: PropTypes.string.isRequired,\n  setApi: PropTypes.func,\n  isLoading: PropTypes.bool,\n};\n","import PropTypes from 'prop-types';\nimport {\n  ContactItem,\n  ContactItemWrapper,\n  ItemName,\n  ItemNumber,\n  ButtonsWrapper,\n  DeleteButton,\n  EditButton,\n} from './ContactsListItem.styled';\nimport { ThreeDots } from 'react-loader-spinner';\nimport {\n  useDeleteContactMutation,\n  useEditContactMutation,\n} from 'redux/contactsApi';\nimport { useState } from 'react';\nimport { ContactModal } from 'components/Modals/ContactModal';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { AiTwotoneEdit } from 'react-icons/ai';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const [isModalShow, setIsModalShow] = useState(false);\n  const [deleteContact, { isLoading: isDeleteLoading }] =\n    useDeleteContactMutation();\n  const [editContact, { isLoading: isEditLoading }] = useEditContactMutation();\n\n  const handleDeleteItem = async id => {\n    await deleteContact(id);\n  };\n\n  const handleModalOpen = () => setIsModalShow(true);\n  const handleModalClose = () => setIsModalShow(false);\n\n  const handleEditItem = () => {\n    handleModalOpen();\n  };\n\n  return (\n    <>\n      <ContactItem>\n        <ContactItemWrapper>\n          <ItemName>{name}</ItemName>\n          <ItemNumber>tel: {number}</ItemNumber>\n        </ContactItemWrapper>\n        <ButtonsWrapper>\n          <DeleteButton\n            type=\"button\"\n            disabled={isDeleteLoading}\n            onClick={() => handleDeleteItem(id)}\n          >\n            {isDeleteLoading ? (\n              <ThreeDots\n                height=\"22\"\n                width=\"22\"\n                radius=\"9\"\n                color=\"black\"\n                ariaLabel=\"three-dots-loading\"\n                wrapperStyle={{}}\n                wrapperClassName=\"\"\n                visible={true}\n              />\n            ) : (\n              <MdDeleteForever size={20} />\n            )}\n          </DeleteButton>\n          <EditButton\n            type=\"button\"\n            disabled={isEditLoading}\n            onClick={handleEditItem}\n          >\n            {isEditLoading ? (\n              <ThreeDots\n                height=\"22\"\n                width=\"22\"\n                radius=\"9\"\n                color=\"black\"\n                ariaLabel=\"three-dots-loading\"\n                wrapperStyle={{}}\n                wrapperClassName=\"\"\n                visible={true}\n              />\n            ) : (\n              <AiTwotoneEdit size={20} />\n            )}\n          </EditButton>\n        </ButtonsWrapper>\n      </ContactItem>\n      {isModalShow && (\n        <ContactModal\n          isModalShow={isModalShow}\n          onClose={handleModalClose}\n          setApi={editContact}\n          isLoading={isEditLoading}\n          id={id}\n          defaultName={name}\n          defaultNumber={number}\n          textButton=\"save changes\"\n        />\n      )}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { List, Button, Message } from './ContactsList.styled';\nimport { ContactListItem } from 'components/ContactsListItem';\nimport { Loader } from 'components/Loader';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsList } from 'hooks/useGetContactsList';\nimport { useGetContactsQuery } from 'redux/contactsApi';\nimport { IoMdAdd } from 'react-icons/io';\n\nexport const ContactList = ({ onShowModal }) => {\n  const { isLoggedIn } = useSelector(state => state.users);\n  const { data, isLoading, error } = useGetContactsQuery(null, {\n    skip: !isLoggedIn,\n  });\n\n  const filter = useSelector(state => state.filter.filter);\n  const contactsList = useGetContactsList(data, filter);\n\n  if (isLoading) return <Loader />;\n\n  return (\n    <>\n      {error && error.status !== 401 && (\n        <h2>\n          {error.status} {JSON.stringify(error.data)}\n        </h2>\n      )}\n\n      {!error && contactsList.length > 0 ? (\n        <List>\n          {contactsList.map(({ id, name, number }) => (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          ))}\n        </List>\n      ) : filter !== '' && contactsList.length === 0 ? (\n        <Message> {'No contact found'}</Message>\n      ) : (\n        !error && <Message> {'Your Phonebook is empty'}</Message>\n      )}\n      {\n        <Button onClick={onShowModal}>\n          <IoMdAdd size={48} />\n        </Button>\n      }\n    </>\n  );\n};\n\nContactList.propTypes = {\n  onShowModal: PropTypes.func.isRequired,\n};\n","const useGetContactsList = (contacts, filter) => {\n  let contactsFiltred;\n\n  if (filter) {\n    const normalizedFilter = filter.toLowerCase();\n\n    contactsFiltred = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n    return contactsFiltred;\n  }\n\n  return contacts;\n};\n\nexport { useGetContactsList };\n","import styled from '@emotion/styled';\nimport { theme } from 'styles/theme';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 24px;\n  padding: 16px 0;\n  background-color: ${theme.colors.lightblue};\n  border-radius: 8px;\n  box-shadow: ${theme.shadows.regular};\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n`;\n\nexport const Title = styled.span`\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 500;\n  color: ${theme.colors.white};\n  margin-bottom: 12px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 240px;\n  height: 24px;\n  margin-bottom: 16px;\n  border-radius: 4px;\n  border: 2px solid ${theme.colors.dark};\n  transition: border-color ${theme.animation.cubicBezierV1};\n\n  :focus {\n    border: 2px solid ${theme.colors.accent};\n    outline: none;\n  }\n`;\n","import { Wrapper, Label, Title, FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterItem } from 'redux/filterSlice';\nimport { useGetContactsQuery } from 'redux/contactsApi';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.filter);\n  const { isLoggedIn } = useSelector(state => state.users);\n\n  const { data, isLoading, error } = useGetContactsQuery(null, {\n    skip: !isLoggedIn,\n  });\n\n  const handleFilterChange = value => {\n    dispatch(filterItem(value));\n  };\n\n  return (\n    <>\n      {error && error.status !== 401 && (\n        <h2>\n          {error.status} {JSON.stringify(error.data)}\n        </h2>\n      )}\n      {((!error && !isLoading && data.length > 1) || filter) && (\n        <Wrapper>\n          <Label>\n            <Title>Find contacts by name :</Title>\n            <FilterInput\n              type=\"text\"\n              name=\"filter\"\n              value={filter}\n              onChange={({ target: { value } }) => handleFilterChange(value)}\n            />\n          </Label>\n        </Wrapper>\n      )}\n    </>\n  );\n};\n","import { ContactList } from 'components/ContactsList';\nimport { ContactModal } from 'components/Modals/ContactModal';\nimport { Filter } from 'components/Filter';\nimport { useState } from 'react';\nimport { useAddContactMutation } from 'redux/contactsApi';\n\nconst Contacts = () => {\n  const [isModalShow, setIsModalShow] = useState(false);\n  const [addItem, { isLoading }] = useAddContactMutation();\n\n  const handleModalOpen = () => setIsModalShow(true);\n  const handleModalClose = () => setIsModalShow(false);\n\n  return (\n    <>\n      {isModalShow ? (\n        <ContactModal\n          isModalShow={isModalShow}\n          onClose={handleModalClose}\n          setApi={addItem}\n          isLoading={isLoading}\n          textButton=\"save contact\"\n        />\n      ) : (\n        <>\n          <Filter />\n          <ContactList onShowModal={handleModalOpen} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Message","styled","theme","List","Button","ContactItem","ContactItemWrapper","ItemName","ItemNumber","ButtonsWrapper","DeleteButton","EditButton","Container","Form","Label","Title","Input","ContactsForm","onClose","buttonText","id","defaultName","defaultNumber","setApi","isLoading","useState","name","setName","number","setNumber","data","useGetContactsQuery","handleSubmit","e","preventDefault","normalizedName","trim","toLowerCase","formData","find","alert","requestData","console","log","reset","handleInputChange","target","value","action","autocomplete","onSubmit","type","pattern","title","required","onChange","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Overlay","Modal","ContactModal","textButton","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","onClick","currentTarget","isModalShow","propTypes","PropTypes","ContactListItem","setIsModalShow","useDeleteContactMutation","deleteContact","isDeleteLoading","useEditContactMutation","editContact","isEditLoading","handleDeleteItem","disabled","size","ContactList","onShowModal","isLoggedIn","useSelector","state","users","skip","error","filter","contactsList","contacts","normalizedFilter","includes","useGetContactsList","Loader","status","JSON","stringify","length","map","Wrapper","FilterInput","Filter","dispatch","useDispatch","filterItem","handleFilterChange","useAddContactMutation","addItem"],"sourceRoot":""}