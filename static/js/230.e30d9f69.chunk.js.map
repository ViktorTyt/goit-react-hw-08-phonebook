{"version":3,"file":"static/js/230.e30d9f69.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsListItem/ContactsListItem.styled.jsx","components/ContactsListItem/ContactsListItem.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactsList/ContactsList.jsx","hooks/useGetContactsList.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { theme } from 'styles/theme';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  justify-content: space-around;\n  box-shadow: ${theme.shadows.regular};\n  margin-top: 72px;\n  margin-bottom: 24px;\n  border-radius: 4px;\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  padding: 16px 0;\n  background-color: ${theme.colors.lightblue};\n  border-radius: 4px;\n\n  box-shadow: ${theme.shadows.large};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  margin-bottom: 12px;\n`;\n\nexport const Title = styled.span`\n  font-size: ${theme.fontSizes.large};\n  font-weight: 500;\n  color: ${theme.colors.white};\n  margin-bottom: 8px;\n`;\n\nexport const Input = styled.input`\n  width: 240px;\n  height: 24px;\n  border-radius: 4px;\n  border: 2px solid ${theme.colors.dark};\n  transition: border-color ${theme.animation.cubicBezierV1};\n\n  :focus {\n    border: 2px solid ${theme.colors.accent};\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 136px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${theme.colors.accent};\n  color: ${theme.colors.white};\n  font-size: 16px;\n  font-weight: 700;\n  text-transform: uppercase;\n  border-radius: 4px;\n  border: 2px solid ${theme.colors.dark};\n  transition: background-color ${theme.animation.cubicBezierV2};\n\n  :hover {\n    background-color: ${theme.colors.darkOpange};\n  }\n  :active {\n    border: none;\n  }\n`;\n","import {\n  Form,\n  Label,\n  Title,\n  Input,\n  Button,\n  Container,\n} from './ContactsForm.styled';\nimport { useState } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'redux/contactsSwaggerApi';\n\nexport const ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data } = useGetContactsQuery();\n  const [addItem, { isLoading }] = useAddContactMutation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const normalizedName = name.trim().toLowerCase();\n\n    if (data.find(({ name }) => name.toLowerCase() === normalizedName)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      await addItem({ name: name.trim(), number: number });\n    }\n\n    reset();\n  };\n\n  const handleInputNameChange = ({ target: { value } }) => setName(value);\n  const handleInputNumberChange = ({ target: { value } }) => setNumber(value);\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container>\n      <Form action=\"\" autocomplete=\"off\" onSubmit={handleSubmit}>\n        <Label>\n          <Title>Name</Title>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleInputNameChange}\n          />\n        </Label>\n        <Label>\n          <Title>Number</Title>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleInputNumberChange}\n          />\n        </Label>\n        <Button type=\"submit\">\n          {isLoading ? (\n            <ThreeDots\n              height=\"56\"\n              width=\"56\"\n              radius=\"9\"\n              color=\"white\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClassName=\"\"\n              visible={true}\n            />\n          ) : (\n            'Add contact'\n          )}\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\nimport { theme } from 'styles/theme';\n\nexport const Title = styled.h2`\n  font-size: 48px;\n  color: ${theme.colors.dark};\n`;\n\nexport const Message = styled.p`\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 500;\n  margin-bottom: 12px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 12px;\n`;\n","import styled from '@emotion/styled';\nimport { theme } from 'styles/theme';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  width: 100%;\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 500;\n  color: ${theme.colors.white};\n  background-color: ${theme.colors.lightblue};\n  border-radius: 4px;\n  box-shadow: ${theme.shadows.regular};\n\n  :not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\nexport const ContactItemWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n`;\nexport const ItemName = styled.span``;\nexport const ItemNumber = styled.span``;\n\nexport const DeleteButton = styled.button`\n  width: 40px;\n  height: 24px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  align-content: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  // background-color: ${theme.colors.gray};\n  transition: background-color ${theme.animation.cubicBezierV2};\n\n  :hover {\n    background-color: ${theme.colors.darkOpange};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ContactItem,\n  ContactItemWrapper,\n  ItemName,\n  ItemNumber,\n  DeleteButton,\n} from './ContactsListItem.styled';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { useDeleteContactMutation } from 'redux/contactsSwaggerApi';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  const handleDeleteIten = async id => {\n    await deleteContact(id);\n  };\n\n  return (\n    <ContactItem>\n      <ContactItemWrapper>\n        <ItemName>{name}</ItemName>\n        <ItemNumber>tel: {number}</ItemNumber>\n      </ContactItemWrapper>\n      <DeleteButton\n        type=\"button\"\n        disabled={isLoading}\n        onClick={() => handleDeleteIten(id)}\n      >\n        {isLoading ? (\n          <ThreeDots\n            height=\"22\"\n            width=\"22\"\n            radius=\"9\"\n            color=\"black\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n          />\n        ) : (\n          'Delete'\n        )}\n      </DeleteButton>\n    </ContactItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const LoaderBox = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderBox } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderBox>\n      <ThreeDots color=\"#ff7700\" />\n    </LoaderBox>\n  );\n};\n","import { List, Message } from './ContactsList.styled';\nimport { ContactListItem } from 'components/ContactsListItem';\nimport { Loader } from 'components/Loader';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsList } from 'hooks/useGetContactsList';\nimport { useGetContactsQuery } from 'redux/contactsSwaggerApi';\n\nexport const ContactList = () => {\n  const { token } = useSelector(state => state.users);\n  console.log(token);\n  const { data, isLoading } = useGetContactsQuery(null, {\n    skip: !token,\n  });\n\n  const filter = useSelector(state => state.filter.filter);\n  const contactsList = useGetContactsList(data, filter);\n\n  if (isLoading) return <Loader />;\n\n  return contactsList.length > 0 ? (\n    <List>\n      {contactsList.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  ) : filter !== '' && contactsList.length === 0 ? (\n    <Message> {'No contact found'}</Message>\n  ) : (\n    <Message>{'Your Phonebook is empty'}</Message>\n  );\n};\n","const useGetContactsList = (contacts, filter) => {\n  let contactsFiltred;\n\n  if (filter) {\n    const normalizedFilter = filter.toLowerCase();\n\n    contactsFiltred = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n    return contactsFiltred;\n  }\n\n  return contacts;\n};\n\nexport { useGetContactsList };\n","import styled from '@emotion/styled';\nimport { theme } from 'styles/theme';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 24px;\n  padding: 16px 0;\n  background-color: ${theme.colors.lightblue};\n  border-radius: 8px;\n  box-shadow: ${theme.shadows.regular};\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n`;\n\nexport const Title = styled.span`\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 500;\n  color: ${theme.colors.white};\n  margin-bottom: 12px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 240px;\n  height: 24px;\n  margin-bottom: 16px;\n  border-radius: 4px;\n  border: 2px solid ${theme.colors.dark};\n  transition: border-color ${theme.animation.cubicBezierV1};\n\n  :focus {\n    border: 2px solid ${theme.colors.accent};\n    outline: none;\n  }\n`;\n","import { Wrapper, Label, Title, FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterItem } from 'redux/filterSlice';\nimport { useGetContactsQuery } from 'redux/contactsSwaggerApi';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.filter);\n  const { data, isLoading } = useGetContactsQuery();\n\n  const handleFilterChange = value => {\n    dispatch(filterItem(value));\n  };\n\n  return (\n    ((!isLoading && data.length > 1) || filter) && (\n      <Wrapper>\n        <Label>\n          <Title>Find contacts by name :</Title>\n          <FilterInput\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={({ target: { value } }) => handleFilterChange(value)}\n          />\n        </Label>\n      </Wrapper>\n    )\n  );\n};\n","import { ContactsForm } from 'components/ContactsForm';\nimport { ContactList } from 'components/ContactsList';\nimport { Filter } from 'components/Filter';\n\nconst Contacts = () => {\n  return (\n    <>\n      <ContactsForm />\n      {/* <SectionTitle>Contacts</SectionTitle> */}\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","theme","Form","Label","Title","Input","Button","ContactsForm","useState","name","setName","number","setNumber","data","useGetContactsQuery","useAddContactMutation","addItem","isLoading","handleSubmit","e","preventDefault","normalizedName","trim","toLowerCase","find","alert","reset","action","autocomplete","onSubmit","type","value","pattern","title","required","onChange","target","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Message","List","ContactItem","ContactItemWrapper","ItemName","ItemNumber","DeleteButton","ContactListItem","id","useDeleteContactMutation","deleteContact","handleDeleteIten","disabled","onClick","LoaderBox","Loader","ContactList","token","useSelector","state","users","console","log","skip","filter","contactsList","contacts","normalizedFilter","includes","useGetContactsList","length","map","Wrapper","FilterInput","Filter","dispatch","useDispatch","filterItem","handleFilterChange"],"sourceRoot":""}