{"version":3,"file":"static/js/421.7204ca3f.chunk.js","mappings":"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","sources":["components/ContactsList/ContactsList.styled.jsx","components/ContactsListItem/ContactsListItem.styled.jsx","components/ContactsListItem/ContactsListItem.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactsList/ContactsList.jsx","hooks/useGetContactsList.js","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/Modals/ModalAddContact.styled.jsx","components/Modals/ModalAddContact.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { theme } from 'styles/theme';\n\nexport const Title = styled.h2`\n  font-size: 48px;\n  color: ${theme.colors.dark};\n`;\n\nexport const Message = styled.p`\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 500;\n  margin-bottom: 12px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  margin: 12px 0;\n`;\n","import styled from '@emotion/styled';\nimport { theme } from 'styles/theme';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  width: 100%;\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 500;\n  color: ${theme.colors.white};\n  background-color: ${theme.colors.lightblue};\n  border-radius: 4px;\n  box-shadow: ${theme.shadows.regular};\n\n  :not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\nexport const ContactItemWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n`;\nexport const ItemName = styled.span``;\nexport const ItemNumber = styled.span``;\n\nexport const DeleteButton = styled.button`\n  width: 40px;\n  height: 24px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  align-content: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  // background-color: ${theme.colors.gray};\n  transition: background-color ${theme.animation.cubicBezierV2};\n\n  :hover {\n    background-color: ${theme.colors.darkOpange};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ContactItem,\n  ContactItemWrapper,\n  ItemName,\n  ItemNumber,\n  DeleteButton,\n} from './ContactsListItem.styled';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { useDeleteContactMutation } from 'redux/contactsSwaggerApi';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  const handleDeleteIten = async id => {\n    await deleteContact(id);\n  };\n\n  return (\n    <ContactItem>\n      <ContactItemWrapper>\n        <ItemName>{name}</ItemName>\n        <ItemNumber>tel: {number}</ItemNumber>\n      </ContactItemWrapper>\n      <DeleteButton\n        type=\"button\"\n        disabled={isLoading}\n        onClick={() => handleDeleteIten(id)}\n      >\n        {isLoading ? (\n          <ThreeDots\n            height=\"22\"\n            width=\"22\"\n            radius=\"9\"\n            color=\"black\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n          />\n        ) : (\n          'Delete'\n        )}\n      </DeleteButton>\n    </ContactItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const LoaderBox = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderBox } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderBox>\n      <ThreeDots color=\"#ff7700\" />\n    </LoaderBox>\n  );\n};\n","import { List, Message } from './ContactsList.styled';\nimport { ContactListItem } from 'components/ContactsListItem';\nimport { Loader } from 'components/Loader';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsList } from 'hooks/useGetContactsList';\nimport { useGetContactsQuery } from 'redux/contactsSwaggerApi';\n\nexport const ContactList = () => {\n  const { isLoggedIn } = useSelector(state => state.users);\n  console.log(isLoggedIn);\n  const { data, isLoading } = useGetContactsQuery(null, {\n    skip: !isLoggedIn,\n  });\n\n  const filter = useSelector(state => state.filter.filter);\n  const contactsList = useGetContactsList(data, filter);\n\n  if (isLoading) return <Loader />;\n\n  return contactsList.length > 0 ? (\n    <List>\n      {contactsList.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  ) : filter !== '' && contactsList.length === 0 ? (\n    <Message> {'No contact found'}</Message>\n  ) : (\n    <Message>{'Your Phonebook is empty'}</Message>\n  );\n};\n","const useGetContactsList = (contacts, filter) => {\n  let contactsFiltred;\n\n  if (filter) {\n    const normalizedFilter = filter.toLowerCase();\n\n    contactsFiltred = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n    return contactsFiltred;\n  }\n\n  return contacts;\n};\n\nexport { useGetContactsList };\n","import styled from '@emotion/styled';\nimport { theme } from 'styles/theme';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  justify-content: space-around;\n  box-shadow: ${theme.shadows.regular};\n  // margin-top: 72px;\n  // margin-bottom: 24px;\n  border-radius: 4px;\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  padding: 16px 0;\n  background-color: ${theme.colors.lightblue};\n  border-radius: 4px;\n\n  box-shadow: ${theme.shadows.large};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  margin-bottom: 12px;\n`;\n\nexport const Title = styled.span`\n  font-size: ${theme.fontSizes.large};\n  font-weight: 500;\n  color: ${theme.colors.white};\n  margin-bottom: 8px;\n`;\n\nexport const Input = styled.input`\n  width: 240px;\n  height: 24px;\n  border-radius: 4px;\n  border: 2px solid ${theme.colors.dark};\n  transition: border-color ${theme.animation.cubicBezierV1};\n\n  :focus {\n    border: 2px solid ${theme.colors.accent};\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 136px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${theme.colors.accent};\n  color: ${theme.colors.white};\n  font-size: 16px;\n  font-weight: 700;\n  text-transform: uppercase;\n  border-radius: 4px;\n  border: 2px solid ${theme.colors.dark};\n  transition: background-color ${theme.animation.cubicBezierV2};\n\n  :hover {\n    background-color: ${theme.colors.darkOpange};\n  }\n  :active {\n    border: none;\n  }\n`;\n","import {\n  Form,\n  Label,\n  Title,\n  Input,\n  Button,\n  Container,\n} from './ContactsForm.styled';\nimport { useState } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'redux/contactsSwaggerApi';\n\nexport const ContactsForm = ({ onClose }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data } = useGetContactsQuery();\n  const [addItem, { isLoading }] = useAddContactMutation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const normalizedName = name.trim().toLowerCase();\n\n    if (data.find(({ name }) => name.toLowerCase() === normalizedName)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      await addItem({ name: name.trim(), number: number });\n      onClose();\n    }\n\n    reset();\n  };\n\n  const handleInputNameChange = ({ target: { value } }) => setName(value);\n  const handleInputNumberChange = ({ target: { value } }) => setNumber(value);\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container>\n      <Form action=\"\" autocomplete=\"off\" onSubmit={handleSubmit}>\n        <Label>\n          <Title>Name</Title>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleInputNameChange}\n          />\n        </Label>\n        <Label>\n          <Title>Number</Title>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleInputNumberChange}\n          />\n        </Label>\n        <Button type=\"submit\">\n          {isLoading ? (\n            <ThreeDots\n              height=\"56\"\n              width=\"56\"\n              radius=\"9\"\n              color=\"white\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClassName=\"\"\n              visible={true}\n            />\n          ) : (\n            'Save contact'\n          )}\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n// import { theme } from 'styles/theme';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(47, 48, 58, 0.4);\n  opacity: 1;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const Modal = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 290px;\n    // padding: 40px;\n    border-radius: 4px;\n    transform: translate(-50%, -100%) scale(1);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n`;\n","import { useEffect } from 'react';\nimport { ContactsForm } from 'components/ContactsForm';\nimport { Overlay, Modal } from './ModalAddContact.styled';\n\nexport const ModalAddContact = ({ onClose }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackDrop = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return (\n    <Overlay onClick={handleBackDrop}>\n      <Modal isModalShow={true}>\n        <ContactsForm onClose={onClose} />\n      </Modal>\n    </Overlay>\n  );\n};\n","import styled from '@emotion/styled';\nimport { theme } from 'styles/theme';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 24px;\n  padding: 16px 0;\n  background-color: ${theme.colors.lightblue};\n  border-radius: 8px;\n  box-shadow: ${theme.shadows.regular};\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n`;\n\nexport const Title = styled.span`\n  font-size: ${theme.fontSizes.medium};\n  font-weight: 500;\n  color: ${theme.colors.white};\n  margin-bottom: 12px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 240px;\n  height: 24px;\n  margin-bottom: 16px;\n  border-radius: 4px;\n  border: 2px solid ${theme.colors.dark};\n  transition: border-color ${theme.animation.cubicBezierV1};\n\n  :focus {\n    border: 2px solid ${theme.colors.accent};\n    outline: none;\n  }\n`;\n","import { Wrapper, Label, Title, FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterItem } from 'redux/filterSlice';\nimport { useGetContactsQuery } from 'redux/contactsSwaggerApi';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.filter);\n  const { isLoggedIn } = useSelector(state => state.users);\n  console.log(isLoggedIn);\n  const { data, isLoading } = useGetContactsQuery(null, {\n    skip: !isLoggedIn,\n  });\n\n  const handleFilterChange = value => {\n    dispatch(filterItem(value));\n  };\n\n  return (\n    ((!isLoading && data.length > 1) || filter) && (\n      <Wrapper>\n        <Label>\n          <Title>Find contacts by name :</Title>\n          <FilterInput\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={({ target: { value } }) => handleFilterChange(value)}\n          />\n        </Label>\n      </Wrapper>\n    )\n  );\n};\n","import styled from '@emotion/styled';\nimport { theme } from 'styles/theme';\n\nexport const Button = styled.button`\n  width: 136px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${theme.colors.accent};\n  color: ${theme.colors.white};\n  font-size: 16px;\n  font-weight: 700;\n  text-transform: uppercase;\n  border-radius: 4px;\n  border: 2px solid ${theme.colors.dark};\n  transition: background-color ${theme.animation.cubicBezierV2}\n\n\n  :hover {\n    background-color: ${theme.colors.darkOpange};\n  }\n  :active {\n    border: none;\n  }\n`;\n","// import { ContactsForm } from 'components/ContactsForm';\nimport { ContactList } from 'components/ContactsList';\nimport { ModalAddContact } from 'components/Modals/ModalAddContact';\nimport { Filter } from 'components/Filter';\nimport { useState } from 'react';\nimport { Button } from './Contacts.styled';\n\nconst Contacts = () => {\n  const [isModalShow, setIsModalShow] = useState(false);\n  const handleModalOpen = () => setIsModalShow(true);\n  const handleModalClose = () => setIsModalShow(false);\n  return (\n    <>\n      {/* <ContactsForm /> */}\n      {isModalShow ? (\n        <ModalAddContact isModalShow={isModalShow} onClose={handleModalClose} />\n      ) : (\n        <>\n          <Filter />\n          <Button onClick={handleModalOpen}>Add Contact</Button>\n          <ContactList />\n        </>\n      )}\n      {/* <SectionTitle>Contacts</SectionTitle> */}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Message","styled","theme","List","ContactItem","ContactItemWrapper","ItemName","ItemNumber","DeleteButton","ContactListItem","id","name","number","useDeleteContactMutation","deleteContact","isLoading","handleDeleteIten","type","disabled","onClick","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","LoaderBox","Loader","ContactList","isLoggedIn","useSelector","state","users","console","log","useGetContactsQuery","skip","data","filter","contactsList","contacts","normalizedFilter","toLowerCase","includes","useGetContactsList","length","map","Container","Form","Label","Title","Input","Button","ContactsForm","onClose","useState","setName","setNumber","useAddContactMutation","addItem","handleSubmit","e","preventDefault","normalizedName","trim","find","alert","reset","action","autocomplete","onSubmit","value","pattern","title","required","onChange","target","Overlay","Modal","ModalAddContact","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","currentTarget","isModalShow","Wrapper","FilterInput","Filter","dispatch","useDispatch","filterItem","handleFilterChange","setIsModalShow"],"sourceRoot":""}